version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_NAME=${REACT_APP_NAME}
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_API_TIMEOUT=${REACT_APP_API_TIMEOUT}
      - REACT_APP_STORAGE_URL=${REACT_APP_STORAGE_URL}
      - REACT_APP_I18N_LOCALE=${REACT_APP_I18N_LOCALE}
      - REACT_APP_CURRENCY=${REACT_APP_CURRENCY}
      - REACT_APP_DATE_FORMAT=${REACT_APP_DATE_FORMAT}
      - REACT_APP_TIME_FORMAT=${REACT_APP_TIME_FORMAT}
      - REACT_APP_TIMEZONE=${REACT_APP_TIMEZONE}
      - REACT_APP_THEME_PRIMARY_COLOR=${REACT_APP_THEME_PRIMARY_COLOR}
      - REACT_APP_THEME_SECONDARY_COLOR=${REACT_APP_THEME_SECONDARY_COLOR}
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:80"
    volumes:
      - ./backend:/var/www/html
      - ${STORAGE_LOCAL_PATH}:${STORAGE_PATH}
    environment:
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - APP_KEY=${APP_KEY}
      - APP_TIMEZONE=${APP_TIMEZONE}
      - APP_LOCALE=${APP_LOCALE}
      - APP_CURRENCY=${APP_CURRENCY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_CHARSET=${DB_CHARSET}
      - DB_COLLATION=${DB_COLLATION}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MAIL_DRIVER=${MAIL_DRIVER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - SESSION_DRIVER=${SESSION_DRIVER}
      - SESSION_LIFETIME=${SESSION_LIFETIME}
      - COOKIE_LIFETIME=${COOKIE_LIFETIME}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOWED_METHODS=${CORS_ALLOWED_METHODS}
      - CORS_ALLOWED_HEADERS=${CORS_ALLOWED_HEADERS}
      - CORS_MAX_AGE=${CORS_MAX_AGE}
      - STORAGE_DRIVER=${STORAGE_DRIVER}
      - STORAGE_PATH=${STORAGE_PATH}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE}
      - ALLOWED_FILE_TYPES=${ALLOWED_FILE_TYPES}
      - CACHE_DRIVER=${CACHE_DRIVER}
      - CACHE_PREFIX=${CACHE_PREFIX}
      - CACHE_TTL=${CACHE_TTL}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION}
      - QUEUE_NAME=${QUEUE_NAME}
      - QUEUE_RETRY_AFTER=${QUEUE_RETRY_AFTER}
      - QUEUE_TIMEOUT=${QUEUE_TIMEOUT}
      - API_VERSION=${API_VERSION}
      - API_PREFIX=${API_PREFIX}
      - API_RATE_LIMIT=${API_RATE_LIMIT}
      - API_RATE_LIMIT_WINDOW=${API_RATE_LIMIT_WINDOW}
      - API_TIMEOUT=${API_TIMEOUT}
    depends_on:
      - db
      - redis

  db:
    image: mysql:8.0
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_CHARSET=${DB_CHARSET}
      - MYSQL_COLLATION=${DB_COLLATION}

  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "${PMA_PORT}:80"
    environment:
      - PMA_HOST=${PMA_HOST}
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    depends_on:
      - db

volumes:
  mysql_data:
  redis_data: 